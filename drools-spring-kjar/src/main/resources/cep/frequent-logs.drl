package cep;

import bsep.tim4.hospitalApp.model.Log;
import bsep.tim4.hospitalApp.model.LogLevel;
import bsep.tim4.hospitalApp.model.LogAlarm;
import bsep.tim4.hospitalApp.model.LogAlarmType;

import java.util.Date;

rule "More than 50 other logs in 1 minute"
    when
        $log1: Log(processed == false, type != "LOGIN_ERROR" && type != "LOGIN")
        accumulate(
            $log2: Log(
                this != $log1,
                processed == false,
                this not after [1m] $log1
            ),
            //over window:time( 1m )
            $logs: collectList($log2)
        )
        eval($logs.size() >= 50)
    then
        System.out.println("******************* FREQUENT ***************************");
        insert(new LogAlarm(new Date(), "", LogAlarmType.DOS, "Many logs in one minute"));
        modify($log1){setProcessed(true);};
        for (Object obj: $logs) {
            Log log = (Log) obj;
            modify(log){setProcessed(true);};
        }
end


rule "More than 10 login logs in 1 minute"
    when
        $log1: Log(processed == false, type == "LOGIN_ERROR" || type == "LOGIN")
        accumulate(
            $log2: Log(
                this != $log1,
                processed == false,
                this not after [30s] $log1,
                this not before [30s] $log1
            ),
            //over window:time( 1m )
            $logs: collectList($log2)
        )
        eval($logs.size() >= 10)
    then
        System.out.println("**************** FREQUENT LOGIN ****************************");
        insert(new LogAlarm(new Date(), "", LogAlarmType.BRUTE_FORCE, "Many login logs in one minute"));
        modify($log1){setProcessed(true);};
        for (Object obj: $logs) {
            Log log = (Log) obj;
            modify(log){setProcessed(true);};
        }
end
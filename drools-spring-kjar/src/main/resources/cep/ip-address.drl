package cep;

import bsep.tim4.hospitalApp.model.Log;
import bsep.tim4.hospitalApp.model.LogLevel;
import bsep.tim4.hospitalApp.model.LogAlarm;
import bsep.tim4.hospitalApp.model.LogAlarmType;

import java.util.Date;
import java.util.List;

global List<String> maliciousIpAdresses;

rule "Login or failed login form malicious ip address"
    when
        $log1: Log(type == "LOGIN_ERROR" || type == "LOGIN", processed == false, $ipAddress : ipAddress)
        eval(maliciousIpAdresses.contains($ipAddress))
    then
        System.out.println("**************** LOGIN FAILED MALICIOUS ****************************");
        insert(new LogAlarm(new Date(), $ipAddress, LogAlarmType.BLACKLIST_IP, "Login from malicious ip address: " + $ipAddress));
        modify($log1){setProcessed(true);};
end


rule "Log with malicious ip address"
    when
        $log1: Log(type != "LOGIN_ERROR" && type != "LOGIN", processed == false, $ipAddress : ipAddress)
        eval(maliciousIpAdresses.contains($ipAddress))
    then
        System.out.println("**************** MALICIOUS ****************************");
        insert(new LogAlarm(new Date(), $ipAddress, LogAlarmType.BLACKLIST_IP, "Log with malicious ip address: "+$ipAddress));
        modify($log1){setProcessed(true);};
end

rule "More than 30 login attempts in 24 hours from one ip address"
    when
        $log1: Log($ipAddress : ipAddress, type == "LOGIN_ERROR", processed == false)
        accumulate(
            $log2: Log(
                this != $log1,
                type == "LOGIN_ERROR",
                processed == false,
                ipAddress == $ipAddress,
                this not after [24h] $log1
            ),
            //over window:time( 24h )
            $logs: collectList($log2)
        )
        eval($logs.size() >= 30)
    then
        System.out.println("**************** IP ADDRESS RULE ****************************");
        insert(new LogAlarm(new Date(), $ipAddress, LogAlarmType.NEW_BLACKLIST_IP, "Many login attempts from ip address: " + $ipAddress));
        modify($log1){setProcessed(true);};
        for (Object obj: $logs) {
            Log log = (Log) obj;
            modify(log){setProcessed(true);};
        }
        maliciousIpAdresses.add($ipAddress);
end